<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BankDeposit">

    <sql id="allDeposits">
        select distinct * from BANKDEPOSIT
    </sql>
    
    <sql id="allDepositWithDepositors">
        select distinct 
            dep.*,
            count(depr.depositorId) as depositorCount,
            sum(depr.depositorAmountDeposit) as depositorAmountSum,
            sum(depr.depositorAmountPlusDeposit) as depositorAmountPlusSum,
            sum(depr.depositorAmountMinusDeposit) as depositorAmountMinusSum,
            dep.depositId as depId
        from BANKDEPOSIT dep
            left outer join
            BANKDEPOSITOR depr
            on dep.depositId=depr.depositId
    </sql>

    <insert id="insert" parameterClass="com.brest.bank.domain.BankDeposit">
        insert into BANKDEPOSIT (depositName, depositMinTerm, depositMinAmount, depositCurrency, depositInterestRate, depositAddConditions)
        values (#depositName#, #depositMinTerm#, #depositMinAmount#, #depositCurrency#, #depositInterestRate#, #depositAddConditions#);
    </insert>

    <select id="getAll" resultClass="com.brest.bank.domain.BankDeposit">
        <include refid="allDeposits"/>
    </select>

    <select id="getById" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                depositId = #depositId#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getByName" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            <isNotEmpty property="depositName">
                depositName = #depositName#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getByCurrency" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            <isNotEmpty property="depositCurrency">
                depositCurrency = #depositCurrency#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getByInterestRate" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            <isNotEmpty property="depositInterestRate">
                depositInterestRate = #depositInterestRate#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getFromToMinTerm" parameterClass="java.util.Map" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            depositMinTerm between
            <isNotEmpty property="fromTerm" prepend="AND">
                #fromTerm#
            </isNotEmpty>
            <isNotEmpty property="toTerm" prepend="AND">
                #toTerm#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getFromToInterestRate" parameterClass="java.util.Map" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>

        <dynamic prepend="WHERE">
            depositInterestRate between
            <isNotEmpty property="startRate" prepend="AND">
                #startRate#
            </isNotEmpty>
            <isNotEmpty property="endRate" prepend="AND">
                #endRate#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getFromToDate" parameterClass="java.util.Map" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>
        inner join BANKDEPOSITOR depositor on depositId = depositor.depositId
        <dynamic prepend="WHERE">
            depositor.depositorDateDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getFromToDateReturn" parameterClass="java.util.Map" resultClass="com.brest.bank.domain.BankDeposit">

        <include refid="allDeposits"/>
        inner join BANKDEPOSITOR depositor on depositId = depositor.depositId
        <dynamic prepend="WHERE">
            depositor.depositorDateReturnDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
    </select>

    <select id="getByNameWithDepositors" parameterClass="com.brest.bank.domain.BankDeposit" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositName">
                dep.depositName = #depositName#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <select id="getByNameFromToDateDepositWithDepositors" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositName">
                dep.depositName = #depositName#
            </isNotEmpty>
            and depr.depositorDateDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <select id="getByNameFromToDateReturnDepositWithDepositors" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositName">
                dep.depositName = #depositName#
            </isNotEmpty>
            and depr.depositorDateReturnDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <select id="getByIdWithDepositors" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                dep.depositId = #depositId#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <select id="getByIdFromToDateDepositWithDepositors" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                dep.depositId = #depositId#
            </isNotEmpty>
            and depr.depositorDateDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <select id="getByIdFromToDateReturnDepositWithDepositors" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        <include refid="allDepositWithDepositors"/>
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                dep.depositId = #depositId#
            </isNotEmpty>
            and depr.depositorDateReturnDeposit between
            <isNotEmpty property="startDate" prepend="AND">
                #startDate#
            </isNotEmpty>
            <isNotEmpty property="endDate" prepend="AND">
                #endDate#
            </isNotEmpty>
        </dynamic>
        group by dep.depositId
    </select>

    <update id="update" parameterClass="com.brest.bank.domain.BankDeposit">
        update BANKDEPOSIT set
        <isNotEmpty property="depositName">
            depositName = #depositName#,
        </isNotEmpty>
        <isNotEmpty property="depositMinTerm">
            depositMinTerm = #depositMinTerm#,
        </isNotEmpty>
        <isNotEmpty property="depositMinAmount">
            depositMinAmount = #depositMinAmount#,
        </isNotEmpty>
        <isNotEmpty property="depositCurrency">
            depositCurrency = #depositCurrency#,
        </isNotEmpty>
        <isNotEmpty property="depositInterestRate">
            depositInterestRate = #depositInterestRate#,
        </isNotEmpty>
        <isNotEmpty property="depositAddConditions">
            depositAddConditions = #depositAddConditions#
        </isNotEmpty>

        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                depositId = #depositId#
            </isNotEmpty>
        </dynamic>
    </update>

    <delete id="delete" parameterClass="java.util.Map">
        delete from BANKDEPOSIT
        <dynamic prepend="WHERE">
            <isNotEmpty property="depositId">
                depositId = #depositId#
            </isNotEmpty>
        </dynamic>
    </delete>

    <select id="rowCount" resultClass="int">
        select count(*) from BANKDEPOSIT
    </select>

</sqlMap>