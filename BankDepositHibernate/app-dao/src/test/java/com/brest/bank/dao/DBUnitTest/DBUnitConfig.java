package com.brest.bank.dao.DBUnitTest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.dbunit.DBTestCase;
import org.dbunit.IDatabaseTester;
import org.dbunit.JdbcDatabaseTester;
import org.dbunit.PropertiesBasedJdbcDatabaseTester;
import org.dbunit.database.DatabaseConfig;
import org.dbunit.dataset.IDataSet;
import org.dbunit.ext.hsqldb.HsqldbDataTypeFactory;
import org.dbunit.operation.DatabaseOperation;

import java.sql.SQLSyntaxErrorException;

public class DBUnitConfig extends DBTestCase {

    private static final Logger LOGGER = LogManager.getLogger();

    protected IDatabaseTester databaseTester;
    protected IDataSet beforeData;

    //--- инициализация IDatabaseTester
    protected void setUp() throws Exception{
        //--- JdbcDatabaseTester - использует DriverManager для создания соединения с БД
        databaseTester  = new JdbcDatabaseTester("org.hsqldb.jdbcDriver", "jdbc:hsqldb:mem:bankDepositDb", "sa", "");
        try {
            databaseTester.getConnection().getConnection()
                    .prepareStatement("CREATE TABLE BANKDEPOSIT(depositId INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY," +
                            "depositName VARCHAR(255) NULL, depositMinTerm INT,depositMinAmount INT, depositCurrency VARCHAR(3) NULL, depositInterestRate INT, depositAddConditions VARCHAR(255) NULL)").execute();
            databaseTester.getConnection().getConnection()
                    .prepareStatement("CREATE TABLE BANKDEPOSITOR(depositorId INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY," +
                            "depositorName VARCHAR(255) NULL, depositorDateDeposit DATE NULL,depositorAmountDeposit INT," +
                            "depositorAmountPlusDeposit INT,depositorAmountMinusDeposit INT,depositorDateReturnDeposit DATE NULL," +
                            "depositorMarkReturnDeposit INT)").execute();

            databaseTester.getConnection().getConfig().setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY, new HsqldbDataTypeFactory());
        } catch (SQLSyntaxErrorException e) {
            LOGGER.warn("Schema DB is allready present", e.toString());
        }
        finally {
            IDataSet dataSet = getDataSet();
            databaseTester.setDataSet(dataSet);
            databaseTester.onSetup();
        }
    }

    //--- конструктор по умолчанию
    public DBUnitConfig(String name) {
        super(name);

        System.setProperty(PropertiesBasedJdbcDatabaseTester.DBUNIT_DRIVER_CLASS, "org.hsqldb.jdbcDriver");
        System.setProperty(PropertiesBasedJdbcDatabaseTester.DBUNIT_CONNECTION_URL, "jdbc:hsqldb:mem:bankDepositDb");
        System.setProperty(PropertiesBasedJdbcDatabaseTester.DBUNIT_USERNAME, "sa");
        System.setProperty(PropertiesBasedJdbcDatabaseTester.DBUNIT_PASSWORD, "");

    }

    //--- для возврата тестовых значений реализуем метод по умолчанию (необходим по шаблону)
    //--- getDataSet() - возвращает значение типа IDataSet
    protected IDataSet getDataSet() throws Exception {
        return beforeData;
    }

    //--- поедение до выполнения теста
    protected DatabaseOperation getSetUpOperation() throws Exception{
        return DatabaseOperation.CLEAN_INSERT;
    }
    //--- поведение после выполнения теста
    protected DatabaseOperation getTearDownOperation() throws Exception {
        return DatabaseOperation.NONE;
    }
}